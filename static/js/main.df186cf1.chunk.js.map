{"version":3,"sources":["containers/headBlueContainer.js","containers/whiteContainer.js","components/image.js","components/boxImage.js","components/rowImages.js","containers/footerContainer.js","containers/middleContainer.js","App.js","serviceWorker.js","index.js"],"names":["HeadBlueContainer","state","id","Component","WhiteContainer","className","src","alt","Image","url","this","props","BoxImage","items","urlbig","idbig","open","close","handleClick","setState","handleInc","undefined","handleDec","onClick","aria-label","isOpen","onDismiss","RowImages","Post","map","box","push","index","Fragment","key","Footer","MiddleContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.df186cf1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nclass HeadBlueContainer extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n        <div id=\"head-container-blue\">\r\n         \r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default HeadBlueContainer;","import React, { Component } from 'react';\r\nclass WhiteContainer extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n           \r\n        <div id=\"head-container\" className=\"shadow w-75 p-3 mb-5 bg-white \">\r\n            <div id=\"details-container\">\r\n            <div id=\"img-container\">\r\n              <img src=\"https://image.shutterstock.com/image-vector/cute-thinking-woman-looking-away-600w-439245706.jpg\" alt=\"none\"></img>\r\n            </div>\r\n            <div id=\"title-container\">\r\n              <div id=\"painter-container\"><span>Painter</span></div>\r\n              <div id=\"name-container\"><span>Israel-Israeli</span></div>\r\n            </div>\r\n            <div id=\"title-contact\">\r\n                <div id=\"tel-container\">\r\n                    <div id=\"tel-img-container\">\r\n                      <img src=\"https://img.icons8.com/plasticine/100/000000/phone-not-being-used.png\" alt=\"none\"/>\r\n                    </div>\r\n                    <div id=\"tel-img-number\">\r\n                      <span>+97252-3529100</span>\r\n                    </div>\r\n                </div>\r\n                <div id=\"mail-container\">\r\n                    <div id=\"mail-img-container\">\r\n                      <img src=\"https://img.icons8.com/cotton/64/000000/important-mail.png\" alt=\"none\"/>\r\n                    </div>\r\n                    <div id=\"mail-img-name\">\r\n                        <span>Israel-Israeli@gmail.com</span>\r\n                    </div>\r\n                  </div>\r\n                  <div id=\"facebook-container\">\r\n                    <div id=\"facebook-img-container\">\r\n                      <img src=\"https://img.icons8.com/dusk/64/000000/facebook-new--v2.png\" alt=\"none\"/> \r\n                    </div>\r\n                    <div id=\"facebook-img-name\">\r\n                        <span>Israel-Israeli</span>\r\n                    </div>\r\n                  </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default WhiteContainer;","import React, { Component } from 'react';\r\nclass Image extends Component {\r\n    state = { \r\n        url:\"\",\r\n        id:\"\"\r\n     }\r\n\r\ncomponentWillUpdate(){\r\n    \r\n}\r\n    render() { \r\n        return ( \r\n            <p><img src={this.props.url} alt=\"none\"></img></p>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Image;","import React, { Component } from 'react';\r\nimport { Dialog } from \"@reach/dialog\";\r\nimport \"@reach/dialog/styles.css\";\r\nimport Image from './image'\r\nclass BoxImage extends Component {\r\n    state = { \r\n        items:[],\r\n        url:\"\",\r\n        urlbig:\"\",\r\n        id:\"\",\r\n        idbig:\"\",\r\n        open:false,\r\n        close:false\r\n     }\r\n    \r\ncomponentWillMount(){\r\n    this.setState({ id:this.props.id,items:this.props.items,url:this.props.url})\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.setState({urlbig:this.state.url,idbig:this.state.id})\r\n}\r\n\r\nhandleClick = () =>{\r\n    this.setState({ open:!this.state.open})\r\n}\r\n\r\nhandleInc = () =>{\r\n \r\n    if(this.state.items[this.state.idbig+1]!==undefined){\r\n    this.setState({idbig:this.state.idbig+1}, () => {\r\n   \r\n        this.setState({urlbig:this.state.items[this.state.idbig].url})\r\n      }); \r\n     \r\n    }\r\n}\r\n\r\nhandleDec = () =>{\r\n    if(this.state.items[this.state.idbig-1]!==undefined){\r\n        this.setState({idbig:this.state.idbig-1}, () => {\r\n       \r\n            this.setState({urlbig:this.state.items[this.state.idbig].url})\r\n          }); \r\n         \r\n        }\r\n}\r\n    render() { \r\n        return ( \r\n        <div className=\"boxPaint shadow p-3 mb-5 bg-white \">\r\n            <img src={this.state.url} onClick={this.handleClick} alt=\"none\"/>\r\n                 <Dialog  aria-label=\"{}\" className=\"dialog-box\" isOpen={this.state.open} onDismiss={this.handleClick}>\r\n                    <Image id={this.state.idbig} url={this.state.urlbig}/>\r\n                    <button id=\"button-image\" className=\"btn btn-default\" onClick={this.handleClick}>Close Pic</button>\r\n                    <div id=\"button-container\">\r\n                        <button id=\"button-image\" className=\"btn btn-default\" onClick={this.handleInc}>Next Pic</button> \r\n                        <button id=\"button-image\" className=\"btn btn-default\" onClick={this.handleDec}>Previous Pic</button> \r\n                    </div>\r\n                   \r\n                 </Dialog>\r\n        </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default BoxImage;","import React, { Component } from 'react';\r\nimport BoxImage from './boxImage';\r\nimport Post from './data.json';\r\n\r\nclass RowImages extends Component {\r\n    state = { \r\n        items:[]\r\n     }\r\n\r\ncomponentWillMount(){\r\n        Post.map((box)=>{\r\n            return(this.state.items.push(box))\r\n        })\r\n};\r\n\r\n        render() { \r\n            return (\r\n                <div className=\"row\">\r\n                    {this.state.items.map((box,index)=>{\r\n                        return(<React.Fragment key={index}><BoxImage key={index} id={box.id} url={box.url} items={this.state.items}/></React.Fragment>)\r\n                    }\r\n                )\r\n                }\r\n               \r\n                 </div> \r\n             );\r\n        }\r\n        \r\n}\r\n \r\n\r\nexport default RowImages;","import React, { Component } from 'react';\r\nclass Footer extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div id=\"footer\">\r\n                <span>Develpod By Elad Mines</span>\r\n          </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Footer;","import React, { Component } from 'react';\r\nimport RowImages from \"../components/rowImages\";\r\nimport FooterContainer from \"../containers/footerContainer\";\r\n\r\nclass MiddleContainer extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div id=\"middle-container\">\r\n                <div className=\"row-container\">\r\n                    <div className=\"row.\">\r\n                        <RowImages />\r\n                        <FooterContainer />\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default MiddleContainer;","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\";\nimport HeadBlueContainer from \"./containers/headBlueContainer\"\nimport WhiteContainer from \"./containers/whiteContainer\";\nimport MiddleContainer from \"./containers/middleContainer\";\n\n\n\nclass App extends Component {\n  state = {  }\n\n  render() { \n    return ( \n      <body>\n        <HeadBlueContainer />\n        < WhiteContainer />\n        <MiddleContainer />\n\n\n      </body>\n     );\n  }\n}\n \n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n \n    <App />\n,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}